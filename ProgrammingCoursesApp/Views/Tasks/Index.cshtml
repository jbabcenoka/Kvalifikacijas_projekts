@model ProgrammingCoursesApp.ViewModels.TasksVM

@{
    ViewData["Title"] = "Topic";
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<script type="text/javascript">
    function getPossibleAnswers(taskId)
    {
        $.ajax({
            type: "GET",
            url: "@Url.Action(nameof(TasksController.GetPossibleAnswers), "Tasks")",
            contentType: "application/json; charset=utf-8",
            data: { "id": taskId },
            dataType: "json",
            success: function (response) {
                $.each(response, function (index, item) {
                    $('#possible-answers-' + taskId)
                        .prepend('<input id=answer-' + item.id + ' type="radio" name = "possibleAnswer" value=' + item.id + '/><label for=answer-' + item.id + ' class="answer-label"> ' + item.text + '</label > <br />')
                });
            },
            failure: function (jqXHR) {
                alert("HTTP Status: " + jqXHR.status + "; Error Text: " + jqXHR.responseText);
            }
        })
    }
</script>

<h2>@Model.TopicName</h2>

@if (Model.TopicBlocks.Count() == 0)
{ 
    <div class="tab-content">
        This topic doesn`t contain any task.
    </div>
}
else 
{ 
    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            @foreach (var topicBlock in Model.TopicBlocks)
            {
                <a class="nav-link nav-tab-link @(topicBlock.Task.GetType() == typeof(Exercise) ? "exercise" : null)"
                            data-bs-toggle="tab" role="tab"
                            data-bs-target="#topic@(topicBlock.Id)" id="tab@(topicBlock.Id)">

                    @if (topicBlock.Task.GetType() == typeof(VideoTask)) { <span>Video</span> }
                    else if (topicBlock.Task.GetType() == typeof(ReadTask)) { <span>Reading</span> }
                    else { <span>Exercise</span> }
                </a>
            }
        </div>
    </nav>

    <div class="tab-content">
            @foreach (var topicBlock in Model.TopicBlocks)
            {
                <div id="topic@(topicBlock.Id)" class="tab-pane" role="tabpanel">
                    <box class="points-box">Points: @topicBlock.Points</box>
                    @if (topicBlock.Task.GetType() == typeof(ReadTask))
                    {
                        var task = (ReadTask)topicBlock.Task;
                        <div class="read-content task-content">
                            <h4>@task.Name</h4>
                            <div>@Html.Raw(task.Text)</div>
                        </div>
                    }
                    else if (topicBlock.Task.GetType() == typeof(VideoTask))
                    {
                        var task = (VideoTask)topicBlock.Task;
                        <div class="task-content">
                            <h4>@task.Name</h4>
                        </div>
                        <div class="video-content task-content">
                            <iframe src="@task.Link"
                                    title="YouTube video player" frameborder="0"
                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                    allowfullscreen></iframe>
                        </div>
                    }
                    else   //uzdevums
                    {
                        var task = (Exercise)topicBlock.Task;

                        <div class="exercise-content task-content">
                            <h4>@task.Name</h4>

                            <h4>@task.QuestionText</h4>

                            <div id="possible-answers-@task.Id">
                                <a id="answer@(topicBlock.Id)" class="btn btn-success answer" onclick="saveAnswer('possible-answers-'+@(task.Id), @topicBlock.Id)">Answer the question</a>
                            </div>

                            <script type="text/javascript">
                                getPossibleAnswers(@task.Id);
                            </script>
                        </div>
                    }

                    <div class="buttons-panel">
                        <a class="btn btn-info" asp-controller="Topics" asp-action="Index" asp-route-id="@Model.CourseId">Back to topics</a>

                        <button type="submit" id="submit-tasks" class="btn btn-success">Submit</button>

                        @if (topicBlock != Model.TopicBlocks.Last())
                        {
                            <a id="next-button" class="btn btn-info" onclick="showNextTab(@topicBlock.Id)">Next task</a>
                        }
                    </div>
                </div>
            }
    </div>
}


<script>
    $(document).ready(function () {
        $(".nav-tabs a").on('show.bs.tab', function (e) {
            if (!$(this).hasClass('exercise')) {
                $(this).addClass('readed');
            }
        });

        $(".nav-tabs a:first-child").tab('show');
    })

    function setAsReaded(id) {
        $('#tab' + id).addClass('readed');
    }

    function showNextTab(currentTabId) {
        $("#tab" + currentTabId).next().tab('show');
    }

    function saveAnswer(formId, currentTabId) {
        setAsReaded(currentTabId);
        $("#" + formId + " :input").each(function () {
            var input = $(this);
            input.attr("disabled", true);
        });
        $("#answer" + currentTabId).addClass("disabled");
    }
</script>

<style>

    h2 {
        display: flex;
        justify-content: center;
        margin-top: 50px;
        margin-bottom: 30px;
    }

    .points-box {
        border: 2px solid rebeccapurple;
        box-shadow: 12px 12px 2px 1px rgba(0, 0, 255, .2);
        padding: 10px;
        position: relative;
        top: 25px;
        font-size: 1.1em;
        font-weight: 700;
        left: 80%;
    }

    .empty-tab {
        margin-bottom: 40px;
    }

    .nav-tab-link {
        font-size: 18px;
        margin-right: 5px;
        color: #1234d5;
        cursor: default;
    }

    .answer-label {
        margin-left: 10px;
    }

    h4 {
        margin-bottom: 20px;
    }

    .task-content {
        font-size: 18px;
        width: 70%;
        margin-top: 10px;
    }

    .video-content {
        overflow: hidden;
        position: relative;
        padding-top: 38.76%;
    }

    iframe {
        width: 100%;
        height: 100%;
        position: absolute;
        left: 0;
        bottom: 0;
        right: 0;
    }

    .buttons-panel {
        margin-top: 70px;
        margin-bottom: 100px;
    }

    #next-button {
        color: white;
        float: right;
        margin-right: 1%;
    }

    #submit-tasks {
        float: right;
        margin-right: 10%;
    }

    .readed {
        background-color: powderblue;
        color: #000;
    }

    label {
        display: inline;
    }

    .answer {
        margin-top: 20px;
        margin-bottom: 20px;
        margin-left: 50%;
        color: white !important;
    }

    .nav-tab-link.active {
        background-color: whitesmoke !important;
    }
</style>