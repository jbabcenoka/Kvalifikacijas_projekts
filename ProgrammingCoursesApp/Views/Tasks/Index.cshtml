@model ProgrammingCoursesApp.ViewModels.TasksVM

@{
    ViewData["Title"] = "Topic " + Model.TopicName;
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<h2>@Model.TopicName</h2>

@if (Model.Blocks.Count() == 0)
{
    <div class="tab-content">
        This topic does not contain any task.
    </div>
    <div class="buttons-panel">
        <a class="btn btn-info" asp-controller="Topics" asp-action="Index" asp-route-id="@Model.CourseId">Back to topics</a>
    </div>
}
else
{
    <form asp-action="SubmitTopicResult" id="myform">
        <nav>
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                @foreach (var topicBlock in Model.Blocks)
                {
                    <a class="nav-link nav-tab-link @(topicBlock.TopicBlock.Task.GetType() == typeof(Exercise) ? "exercise" : null)"
                       data-bs-toggle="tab" role="tab"
                       data-bs-target="#topic@(topicBlock.TopicBlock.Id)" id="tab@(topicBlock.TopicBlock.Id)">

                        @if (topicBlock.TopicBlock.Task.GetType() == typeof(VideoTask))
                        {<span>Video</span> }
                        else if (topicBlock.TopicBlock.Task.GetType() == typeof(ReadTask))
                        { <span>Reading</span> }
                        else
                        { <span>Exercise</span>}
                    </a>
                }
            </div>
        </nav>

        <div class="tab-content">
            @for(int i = 0; i < Model.Blocks.Count; i++)
            {
                var block = Model.Blocks[i];
                <div id="topic@(block.TopicBlock.Id)" class="tab-pane" role="tabpanel">
                    <input asp-for="Blocks[i].TopicBlock.Id" value="@Model.Blocks[i].TopicBlock.Id" type="hidden" />
                    <input id="topic@(block.TopicBlock.Id)-input" asp-for="Blocks[i].IsViewed" value="@Model.Blocks[i].IsViewed" type="hidden" />
                    
                    <box class="points-box">Points: @block.TopicBlock.Points</box>
                    @if (block.TopicBlock.Task.GetType() == typeof(ReadTask))
                    {
                        var task = (ReadTask)block.TopicBlock.Task;
                        <div class="read-content task-content">
                            <h4>@task.Name</h4>
                            <div>@Html.Raw(task.Text)</div>
                        </div>
                    }
                    else if (block.TopicBlock.Task.GetType() == typeof(VideoTask))
                    {
                        var task = (VideoTask)block.TopicBlock.Task;
                        <div class="task-content">
                            <h4>@task.Name</h4>
                        </div>
                        <div class="video-content task-content">
                            <iframe src="@task.Link"
                                    title="YouTube video player" frameborder="0"
                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                    allowfullscreen></iframe>
                        </div>
                    }
                    else   //uzdevums
                    {
                        var task = (Exercise)block.TopicBlock.Task;

                        <div class="exercise-content task-content">
                            <h4>@task.Name</h4>

                            <h4>@task.QuestionText</h4>

                            <div id="answers-@task.Id">
                                @foreach (var answer in block.PossibleAnswers)
                                {
                                    <input type="radio" id="@answer.Id" asp-for="Blocks[i].SelectedAnswer" value="@answer.Id" />
                                    <label for="@answer.Id" class="answer-label">@answer.Text</label><br />
                                }
                                <a id="answer@(block.TopicBlock.Id)" class="btn btn-success answer" onclick="saveAnswer('#answers-@(task.Id)', @block.TopicBlock.Id)">Answer the question</a>
                            </div>
                        </div>
                    }

                    <div class="buttons-panel">
                        <a class="btn btn-info" asp-controller="Topics" asp-action="Index" asp-route-id="@Model.CourseId">Back to topics</a>

                        <button type="submit" id="submit-tasks" class="btn btn-success">Submit</button>

                        @if (i < Model.Blocks.Count - 1)
                        {
                            <a id="next-button" class="btn btn-info" onclick="showNextTab(@block.TopicBlock.Id)">Next task</a>
                        }
                    </div>
                </div>
            }
        </div>
    </form>
}

<script type="text/javascript">
    $(document).ready(function () {
        $(".nav-tabs a").on('show.bs.tab', function (e) {
            if (!$(this).hasClass('exercise')) {
                var tabId = $(this).attr("id");
                var targetId = $(this).attr("data-bs-target");
                setAsReaded(tabId, targetId);
            }
        });

        $(".nav-tabs a:first-child").tab('show');
    })

    function setAsReaded(id, targetId) {
        $('#' + id).addClass('readed');
        $(targetId +"-input").val(true);
    }

    function showNextTab(currentTabId) {
        $("#tab" + currentTabId).next().tab('show');
    }

    function saveAnswer(taskId, questionId) {
        var tabId = $('.nav-tabs a.active').attr("id");
        var targetId = $('.nav-tabs a.active').attr("data-bs-target");
        setAsReaded(tabId, targetId);
        $(taskId + " input:not(:checked)").attr('disabled', true);
        $('#answer' + questionId).addClass("disabled");
    }
</script>

<style>

    h2 {
        display: flex;
        justify-content: center;
        margin-top: 50px;
        margin-bottom: 30px;
    }

    .points-box {
        border: 2px solid rebeccapurple;
        box-shadow: 12px 12px 2px 1px rgba(0, 0, 255, .2);
        padding: 10px;
        position: relative;
        top: 25px;
        font-size: 1.1em;
        font-weight: 700;
        left: 80%;
    }

    .empty-tab {
        margin-bottom: 40px;
    }

    .nav-tab-link {
        font-size: 18px;
        margin-right: 5px;
        color: #1234d5;
        cursor: default;
    }

    .answer-label {
        margin-left: 10px;
    }

    h4 {
        margin-bottom: 20px;
    }

    .task-content {
        font-size: 18px;
        width: 70%;
        margin-top: 10px;
    }

    .video-content {
        overflow: hidden;
        position: relative;
        padding-top: 38.76%;
    }

    iframe {
        width: 100%;
        height: 100%;
        position: absolute;
        left: 0;
        bottom: 0;
        right: 0;
    }

    .buttons-panel {
        margin-top: 70px;
        margin-bottom: 100px;
    }

    #next-button {
        color: white;
        float: right;
        margin-right: 1%;
    }

    #submit-tasks {
        float: right;
        margin-right: 10%;
    }

    .readed {
        background-color: powderblue;
        color: #000;
    }

    label {
        display: inline;
    }

    .answer {
        margin-top: 20px;
        margin-bottom: 20px;
        margin-left: 50%;
        color: white !important;
    }

    .nav-tab-link.active {
        background-color: whitesmoke !important;
    }
</style>