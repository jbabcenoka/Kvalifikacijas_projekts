@model ProgrammingCoursesApp.ViewModels.TasksVM

@{
    ViewData["Title"] = "Topic tasks creation";

    var topicName = ViewBag.TopicName;
    var topicId = ViewBag.TopicId;
    var courseId = ViewBag.CourseId;
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<script type="text/javascript">
        function getPossibleAnswers(taskId) {
            $.ajax({
                type: "GET",
                url: "@Url.Action(nameof(TasksController.GetPossibleAnswers), "Tasks")",
                contentType: "application/json; charset=utf-8",
                data: { "id": taskId },
                dataType: "json",
                success: function (response) {
                    $.each(response, function (index, item) {
                        $('#possible-answers-' + taskId)
                            .append('<input id=answer-' + item.id + ' type="radio" name = "possibleAnswer" value=' + item.id + '/><label for=answer-' + item.id + ' class="answer-label"> ' + item.text + '</label > <br />')
                    });
                },
                failure: function (jqXHR) {
                    alert("HTTP Status: " + jqXHR.status + "; Error Text: " + jqXHR.responseText);
                }
            })
        }
</script>

<h2>@topicName</h2>

@if (Model.TopicBlocks.Count() == 0)
{
    <div class="tab-content empty-content">
        This topic doesn`t contain any task.
    </div>
}
else
{
    <div class="tab-content">
        @foreach (var topicBlock in Model.TopicBlocks)
        {
            <hr />
            <div id="topic@(topicBlock.Id)" class="task-view">
                <box class="points-box">Points: @topicBlock.Points</box>
                @if (topicBlock.Task.GetType() == typeof(ReadTask))
                {
                    var task = (ReadTask)topicBlock.Task;
                    <div class="read-content task-content">
                        <h4>@task.Name (Reading)</h4>
                        @task.Text
                    </div>
                    <div class="task-buttons">
                        <a class="btn btn-outline-primary" asp-controller="Tasks" asp-action="Edit" asp-route-id="@task.Id">Edit</a>
                        <a class="btn btn-outline-danger">Delete</a>
                    </div>
                }
                else if (topicBlock.Task.GetType() == typeof(VideoTask))
                {
                    var task = (VideoTask)topicBlock.Task;
                    <div class="task-content">
                        <h4>@task.Name (Video)</h4>
                    </div>
                    <div class="video-content task-content">
                        <iframe src="@task.Link"
                                title="YouTube video player" frameborder="0"
                                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                                allowfullscreen></iframe>
                    </div>
                    <div class="task-buttons">
                        <a class="btn btn-outline-primary" asp-controller="Tasks" asp-action="Edit" asp-route-id="@task.Id">Edit</a>
                        <a class="btn btn-outline-danger">Delete</a>
                    </div>
                }
                else   //uzdevums
                {
                    var task = (Exercise)topicBlock.Task;

                    <div class="exercise-content task-content">
                        <h4>@task.Name (Exercise)</h4>

                        <h4>@task.QuestionText</h4>

                        <form id="possible-answers-@task.Id">
                        </form>

                        <script type="text/javascript">
                            getPossibleAnswers(@task.Id);
                        </script>

                    </div>
                    <div class="task-buttons">
                        <a class="btn btn-outline-primary" asp-controller="Tasks" asp-action="Edit" asp-route-id="@task.Id">Edit</a>
                        <a class="btn btn-outline-danger">Delete</a>
                    </div>
                }

            </div>
        }
    </div>
}

<a class="btn btn-info back-button" asp-controller="Topics" asp-action="TopicsForCreator" asp-route-id="@Model.CourseId">Back to topics</a>
<a class="btn btn-primary create-button" asp-controller="Topics" asp-action="TopicsForCreator" asp-route-id="@Model.CourseId">Create new task</a>

<style>
    h2 {
        display: flex;
        justify-content: center;
        margin-top: 50px;
        margin-bottom: 30px;
    }

    .empty-content {
        margin-bottom: 40px;
    }

    .points-box {
        border: 2px solid rebeccapurple;
        box-shadow: 12px 12px 2px 1px rgba(0, 0, 255, .2);
        padding: 5px;
        position: relative;
        top: 25px;
        font-size: 1em;
        font-weight: 600;
        left: 80%;
    }

    .task-view {
        margin-bottom: 50px;
    }

    .nav-tab-link {
        font-size: 18px;
        margin-right: 5px;
        color: #1234d5;
        background-color: #ffffff;
    }

    .answer-label {
        margin-left: 10px;
    }

    h4 {
        margin-bottom: 20px;
    }

    .task-buttons {
        margin-top: 20px;
    }

    .task-content {
        clear: both;
        font-size: 18px;
        width: 60%;
        margin-top: 10px;
    }

    .video-content {
        overflow: hidden;
        position: relative;
        padding-top: 33.76%;
    }

    .create-button {
        margin-left: 65%;
    }

    iframe {
        width: 100%;
        height: 100%;
        position: absolute;
        left: 0;
        bottom: 0;
        right: 0;
    }
</style>

